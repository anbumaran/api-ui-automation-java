plugins {
    id 'java'
    id 'io.freefair.lombok'
    id 'org.springframework.boot' version '2.5.15'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.asapp'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}


dependencies {
    implementation project(':auto-common')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-parent:3.0.4'
    implementation('io.rest-assured:rest-assured:5.4.0') {
        exclude group: 'org.codehaus.groovy'
        exclude group: 'com.sun.xml.bind'
    }
    implementation 'io.rest-assured:xml-path:5.4.0'
    implementation 'io.rest-assured:json-path:5.4.0'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-impl:4.0.4'
    implementation 'com.sun.xml.bind:jaxb-core:4.0.4'
    implementation 'org.assertj:assertj-core:3.24.2'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
    implementation 'org.apache.commons:commons-text:1.11.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'

}

test {
    exclude '**com/**'
}

def property = new Properties()
file("$rootDir/gradle.properties").withInputStream { property.load(it) }

tasks.register('apiDevSpringJunitTest', Test) {
    description = "API Dev Test"
    systemProperty 'testautomation.env', 'dev'
    useJUnitPlatform {
        include '**com/asapp/api/dev/**'
        includeTags("dev")
    }
}

tasks.register('apiLiveSpringJunitTest', Test) {
    description = "API Live Test"
    systemProperty 'testautomation.env', 'live'
    useJUnitPlatform {
        include '**com/asapp/api/live/**'
        includeTags("live")
    }
}
